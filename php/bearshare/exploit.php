/*

If we go to http://bearshare.training.jinblack.it/backup-files/ we get download links for index and download php code.

In download.php, when when checking 'storagesv' in the POST request, if its equal to "gimmeflag", then the flag will get printed out through the die() function.

Before that, validate_hash() is called:
    - 'hash' and 'storagesv' cannot be empty
    - if 'nonce' is set, sets the hashing key $S_KEY to the output of hash(nonce, S_KEY)
        - Since $S_KEY is not defined at this point, we basically know the key
        - We can just use the same hash_hmac('sha256', data, key) function with an undefined key
    - 'storagesv' is hashed with $S_KEY and compared to 'hash', if != then die

So:
    - $S_KEY undefined
    - $storagesv = "gimmeflag"
    - Set 'hash' to hash_hmac('sha256', $storagesv, $S_KEY) 
    - Send post request

POST: curl -X POST --data "hash=028cf6abf024b107104bc69d844cd3e70755cf2be66b9ab313ca62f9efdcf769&storagesv=gimmeflag&messid=ishallpass" http://bearshare.training.jinblack.it/download.php

Alternative if it wasn't so easy:
    - When passing an array as data to hash_hmac, it returns NULL
        - pass 'nonce' as an array in the post: "nonce[]=yep&hash=...."
        - calculate the hash with a NULL key
*/

<?php
$storagesv = "gimmeflag";

$hash = hash_hmac('sha256', $storagesv, $S_KEY);
echo "payload: hash=" . $hash . "&storagesv=" . $storagesv . "&messid=ishallpass\n"; 
?>
